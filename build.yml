trigger:
  - master

pool: "default"

variables:
  resourceGroupName: 'gaal'
  location: 'Canada Central'

stages:
- stage: ValidateTemplates
  displayName: Validate ARM Templates
  jobs:
  - job: ValidateARMTemplates
    displayName: Validate ARM Templates
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Validate Storage Template
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/storage/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/storage/azuredeploy.parameters.json'
          deploymentMode: 'Validation'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Validate Function App Template
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/functionApp/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/functionApp/azuredeploy.parameters.json'
          deploymentMode: 'Validation'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Validate Service Bus Template
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/serviceBus/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/serviceBus/azuredeploy.parameters.json'
          deploymentMode: 'Validation'

- stage: Build
  displayName: Build Stage
  dependsOn: ValidateTemplates
  jobs:
  - job: BuildBlobFunction
    displayName: Build Blob Function
    steps:
      - task: DotNetCoreCLI@2
        displayName: Restore Project
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)/BlobFunction/*.csproj'
          
      - task: DotNetCoreCLI@2
        displayName: Build Azure Function
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/BlobFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.BinariesDirectory)'

      - task: DotNetCoreCLI@2
        displayName: Publish Azure Function
        inputs:
          command: 'publish'
          projects: '$(Build.SourcesDirectory)/BlobFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          publishWebProjects: false
          zipAfterPublish: true
          modifyOutputPath: false

      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifacts
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'blob-function'
          publishLocation: 'Container'

  - job: BuildQueueFunction
    displayName: Build Queue Function
    steps:
      - task: DotNetCoreCLI@2
        displayName: Restore QueueFunction Project
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)/QueueFunction/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: Build QueueFunction Project
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/QueueFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.BinariesDirectory)'

      - task: DotNetCoreCLI@2
        displayName: Publish QueueFunction Project
        inputs:
          command: 'publish'
          projects: '$(Build.SourcesDirectory)/QueueFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          publishWebProjects: false
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifacts for Queue Function
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'queue-function'
          publishLocation: 'Container'