trigger: none

resources:
  pipelines:
  - pipeline: build
    source: build
    trigger: 
      branches:
        include:
          - master

pool: "default"

variables:
  resourceGroupName: 'gaal'
  location: 'Canada Central'
  BlobString: 'patate'
  AzureBlob: 'storagegaal'
  blobFunctionAppName: 'gaaltriggerblob'
  queueFunctionAppName : 'gaaltriggerQueue'
  ServiceBusConnectionString: 'ServiceBusConnectionString'
  ServiceBusQueueName: 'ServiceBusQueueName'

stages:
- stage: Infrastructure
  displayName: Infrastructure Deployment
  jobs:
  - job: DeployInfrastructure
    displayName: Deploy Azure Resources
    variables:
      blobstring: ''
      serviceBusConnString: ''
      serviceBusQueueName: ''
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Azure Storage
        name: StorageDeployment
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.DefaultWorkingDirectory)/storage/azuredeploy.json'
          csmParametersFile: '$(System.DefaultWorkingDirectory)/storage/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'StorageOutputs'

      - powershell: |
          $outputs = ConvertFrom-Json '$(StorageOutputs)'
          $blobString = $outputs.blobstoragestring.value
          Write-Host "##vso[task.setvariable variable=blobstring;isOutput=true]$blobString"
        name: SetBlobString
        displayName: Set Blob Connection String

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Function App
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.DefaultWorkingDirectory)/functionApp/azuredeploy.json'
          csmParametersFile: '$(System.DefaultWorkingDirectory)/functionApp/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Function App
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.DefaultWorkingDirectory)/functionApp/azuredeploy.json'
          csmParametersFile: '$(System.DefaultWorkingDirectory)/functionApp/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
          overrideParameters: |
            name=$(queueFunctionAppName)
            hostingPlanName=$(ASP-gaal-8b9r)

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Service Bus
        name: ServiceBusDeployment
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          subscriptionId: '49cf333e-f9ea-40ed-b006-dd5f16f2add5'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(System.DefaultWorkingDirectory)/serviceBus/azuredeploy.json'
          csmParametersFile: '$(System.DefaultWorkingDirectory)/serviceBus/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'ServiceBusOutputs'

      - powershell: |
          $outputs = ConvertFrom-Json '$(ServiceBusOutputs)'
          $connString = $outputs.ServiceBusConnectionString.value
          $queueName = $outputs.ServiceBusQueueName.value
          Write-Host "##vso[task.setvariable variable=serviceBusConnString;isOutput=true]$connString"
          Write-Host "##vso[task.setvariable variable=serviceBusQueueName;isOutput=true]$queueName"
        name: SetServiceBusVars
        displayName: Set Service Bus Variables

- stage: DeployFunctions
  displayName: Deploy Functions
  dependsOn: Infrastructure
  variables:
    blobstring: $[ dependencies.Infrastructure.outputs['DeployInfrastructure.SetBlobString.blobstring'] ]
    serviceBusConnString: $[ dependencies.Infrastructure.outputs['DeployInfrastructure.SetServiceBusVars.serviceBusConnString'] ]
    serviceBusQueueName: $[ dependencies.Infrastructure.outputs['DeployInfrastructure.SetServiceBusVars.serviceBusQueueName'] ]
  jobs:
  - job: DeployBlobFunction
    displayName: Deploy Blob Function
    steps:
      - download: build
        artifact: blob-function
        
      - task: AzureFunctionApp@2
        displayName: Deploy Blob Function
        inputs:
          connectedServiceNameARM: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          appType: 'functionApp'
          appName: '$(blobFunctionAppName)'
          deployToSlotOrASE: true
          resourceGroupName: '$(resourceGroupName)'
          slotName: 'production'
          package: '$(Pipeline.Workspace)/build/blob-function/**/*.zip'
          appSettings: '-Blob_ConnectionString $(blobstring) -Blob_ConnectionString__blob "https://$(AzureBlob).blob.core.windows.net/"'
          deploymentMethod: 'runFromPackage'

  - job: DeployQueueFunction
    displayName: Deploy Queue Function
    steps:
      - download: build
        artifact: queue-function
        
      - task: AzureFunctionApp@2
        displayName: Deploy Queue Function
        inputs:
          connectedServiceNameARM: 'Abonnement_Al(49cf333e-f9ea-40ed-b006-dd5f16f2add5)'
          appType: 'functionApp'
          appName: '$(queueFunctionAppName)'
          deployToSlotOrASE: true
          resourceGroupName: '$(resourceGroupName)'
          slotName: 'production'
          package: '$(Pipeline.Workspace)/build/queue-function/**/*.zip'
          appSettings: |
            -ServiceBus_ConnectionString $(serviceBusConnString)
            -ServiceBus_QueueName $(serviceBusQueueName)
          deploymentMethod: 'auto'